# -*- coding: UTF-8 -*-
#This file was originally generated by PyScripter's unitest wizard


import unittest
import models

class TestGlobalFunctions(unittest.TestCase):

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testStudyWeek(self):
        les = models.Lesson((1,2),"", None,u"Жож",
                           "lec", "412-3", u"Калашников"
                            )
        day = models.StudyDay([les, les], u"Суббота")
        week = models.StudyWeek([day])
        for day in week:
            for lesson in day:
                self.assertEqual(lesson, les)

    def testLesson(self):
        les1 = models.Lesson((1,2),"", None, u"Жож",
                           "lec", "412-3", u"Калашников")
        les2 = models.Lesson((1,2),"", 2, u"Жож",
                           "lec", "412-3",u"Калашников")
        with self.assertRaises(ValueError):
            les1 = models.Lesson((1,"a"),"", 2, u"Жож",
                           "lec", "412-3", u"Калашников")
        with self.assertRaises(ValueError):
            les1 = models.Lesson((1,2),"", "a", u"Жож",
                           "lec", "412-3", u"Калашников")
    def testLessonStr(self):
        les1 = models.Lesson((1,2),"", None, u"Жож",
                           "lec", "412-3", u"Калашников")
        self.assertEqual(unicode(les1), u"1,2    Жож lec 412-3 Калашников")

    def testLessonWeekStr(self):
        les1 = models.Lesson("1,3,4","", None, u"Жож",
                           "lec", "412-3", u"Калашников")
        self.assertEqual(unicode(les1), u"1,3,4    Жож lec 412-3 Калашников" )

if __name__ == '__main__':
    unittest.main()
